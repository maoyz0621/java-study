<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 切面配置 -->
	<aop:config>
		<!-- 切入点
		    第一个*号：表示返回类型，*号表示所有的类型
		    .. : 表示当前包和当前包的所有子包
		    第二个*号：表示类名，*号表示所有的类
		    *(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数。
		-->
		<aop:pointcut expression="execution(* com.myz.spring.aop.xml..*.*(..))" id="pointcut"/>
		<!--
		     切面通知,执行顺序跟配置顺序有关
		     大多用于日志，缓存
		-->
		<aop:aspect ref="logging" order="1">
            <!--　环绕通知　-->
            <aop:around method="around" pointcut-ref="pointcut" arg-names="pjp"/>
            <!-- 前置通知　-->
            <aop:before method="beforeService" pointcut-ref="pointcut"/>
            <!-- 后置通知 -->
            <aop:after method="afterService" pointcut-ref="pointcut"/>
            <!-- 后置通知，有返回值 -->
            <aop:after-returning method="afterReturnService" pointcut-ref="pointcut" returning="retVal"/>
            <!-- 后置通知，有异常　-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="e"/>

            <!--　
                  其中types-mathcing 之前原始的类
                  implement-interface 想要添加的功能的接口
                  default-impl 新功能的默认的实现
            -->
            <aop:declare-parents types-matching="com.myz.spring.aop.xml.CalculatorImp"
                                 implement-interface="com.myz.spring.aop.xml.MyIntroduction"
                                 default-impl="com.myz.spring.aop.xml.MyIntroductionImpl"/>

		</aop:aspect>

        <!-- 定义通知器,大多用于事务管理 -->
        <!--<aop:advisor advice-ref="" pointcut-ref=""/>-->

	</aop:config>
	
	<bean id="calculator" class="com.myz.spring.aop.xml.CalculatorImp"/>
	
	<!-- 切面bean -->
	<bean id="logging" class="com.myz.spring.aop.xml.aspect.LoggingAspect"/>
</beans>
