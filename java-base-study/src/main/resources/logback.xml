<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scanPeriod="60 seconds" scan="true">
    <!--
       说明：
       1、日志级别及文件
           日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
           例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，
           日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名
           例如log-level-2013-12-21.0.log
           其它级别的日志也是如此。
       2、文件路径
           若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找logs文件夹，以相对路径../logs。
           若部署到Tomcat下，则在Tomcat下的logs文件中
       3、Appender
           FILEERROR对应error级别，文件名以log-error-xxx.log形式命名
           FILEWARN对应warn级别，文件名以log-warn-xxx.log形式命名
           FILEINFO对应info级别，文件名以log-info-xxx.log形式命名
           FILEDEBUG对应debug级别，文件名以log-debug-xxx.log形式命名
           stdout将日志信息输出到控制上，为方便开发测试使用
    -->
    <!-- 从spring中获取配置，如获取不到会使用默认值 -->
    <springProperty source="paas_app_id" name="LOG_SERVICE_NAME" scope="context"/>
    <springProperty source="logging_path" name="LOG_HOME" scope="context"/>
    <springProperty source="logging_output_level" name="LOG_LEVEL" scope="context"/>
    <springProperty source="logging_filemaxsize" name="LOG_MAX_SIZE" scope="context"/>
    <springProperty source="logging_file_totalsizecap" name="LOG_TOTAL_SIZE_CAP" scope="context"/>
    <springProperty source="logging_file_maxhistory" name="LOG_MAX_HISTORY" scope="context"/>

    <!-- 输出样式 -->
    <property name="pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId}][%thread] %level %logger{80} [%file:%line] - %msg%n"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date{yyyy-MM-dd HH:mm:ss}[%yellow(%thread)]%highlight(%-5level) %magenta(%-4relative) -
                [%-40.40logger{39}:%line]:%msg%n
            </pattern>
        </encoder>
    </appender>


    <appender name="MainLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-MAIN.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-MAIN-%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${LOG_MAX_HISTORY:-30}</MaxHistory>
            <MaxFileSize>${LOG_MAX_SIZE:-200MB}</MaxFileSize>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP:-10GB}</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>


    <appender name="ErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-ERROR.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-ERROR-%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${LOG_MAX_HISTORY:-30}</MaxHistory>
            <MaxFileSize>${LOG_MAX_SIZE:-200MB}</MaxFileSize>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP:-10GB}</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <appender name="WarnLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-WARN.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME:-logs}/${LOG_SERVICE_NAME:-app}-WARN-%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${LOG_MAX_HISTORY:-30}</MaxHistory>
            <MaxFileSize>${LOG_MAX_SIZE:-200MB}</MaxFileSize>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP:-10GB}</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>

        <!-- log filter -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 关闭类中某个级别的输出 OFF全部关闭 , INFO,DEBUG ...<logger name="x.x.Constants"><level value="OFF"/></logger> -->
    <logger name="org.apache" level="ERROR"/>
    <logger name="org.apache.http.wire" level="WARN"/>
    <logger name="org.apache.http.headers" level="WARN"/>
    <logger name="com.google" level="INFO"/>
    <logger name="net.rubyeye" level="INFO"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.apache.commons.httpclient" level="fatal"/>

    <!-- log output level -->

    <springProfile name="dev">
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="MainLog"/>
            <appender-ref ref="WarnLog"/>
            <appender-ref ref="ErrorLog"/>
        </root>
    </springProfile>

    <springProfile name="test,pre,prod">
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="MainLog"/>
            <appender-ref ref="WarnLog"/>
            <appender-ref ref="ErrorLog"/>
        </root>
    </springProfile>

</configuration>