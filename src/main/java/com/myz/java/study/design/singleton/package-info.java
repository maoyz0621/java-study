/**
 *
 *    单例模式的懒汉式实现方式体现了延迟加载的思想，什么是延迟加载呢？
 * 通俗点说，就是一开始不要加载资源或者数据，一直等，等到马上就要使用这个资源或者数据了，躲不过去了才加载，
 * 所以也称Lazy Load，不是懒惰啊，是“延迟加载”，这在实际开发中是一种很常见的思想，尽可能的节约资源。
 *
 *
 *   单例模式的懒汉式实现还体现了缓存的思想，缓存也是实际开发中非常常见的功能。
 * 简单讲就是，如果某些资源或者数据会被频繁的使用，而这些资源或数据存储在系统外部，比如数据库、硬盘文件等，那么每次操作这些数据的时候都从
 * 数据库或者硬盘上去获取，速度会很慢，会造成性能问题。一个简单的解决方法就是：把这些数据缓存到内存里面，每次操作的时候，先到内存里面找，
 * 看有没有这些数据，如果有，那么就直接使用，如果没有那么就获取它，并设置到缓存中，下一次访问的时候就可以直接从内存中获取了。从而节省大量的时间，
 * 当然，缓存是一种典型的空间换时间的方案。
 * @author maoyz on 18-1-6.
 */
package com.myz.java.study.design.singleton;